

name: Docset Build and Publish
on: 
  push:
    tags:
      - "*"


jobs:
  build-and-publish:
    runs-on: ubuntu-18.04
    steps:
      - name: Prepare
        uses: actions/setup-node@v2
        with:
            node-version: '12'
      - run: sudo npm_config_user=root npm install -g @cc12703m/mddocsetbuilder@1.5.1


      - name: Checkout
        uses: actions/checkout@v2
        with:
            path: './source'


      - name: Build Docset
        run: mddocsetbuilder ./source -o ./out -n learning_note -p tgz 
        working-directory: ${{ github.workspace }}


      - name: Update to release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Release Document
          draft: false
          prerelease: false
      - id: update_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./out/learning_note.docset.tgz
          asset_name: learning_note.docset.tgz
          asset_content_type: application/tgz

      - name: submit info
        id: meta
        uses: docker/metadata-action@v3
        with: 
          images: cc12703/learning_note
          tags: type=ref,event=tag
      - id: submit
        uses: fjogeleit/http-request-action@v1.8.0
        with:
          url: 'http://notify.cc12703.com:3000/update/submit'
          method: 'POST'
          customHeaders: '{"Accept": "application/json"}'
          data: '{"repoName" : "learning_note", "lastVer" : "${{steps.meta.outputs.version}}", "lastUrl" : "${{steps.update_release.outputs.browser_download_url}}"}'
      - id: submit_resp
        run: echo ${{ steps.submit.outputs.response }}


        
      
        
